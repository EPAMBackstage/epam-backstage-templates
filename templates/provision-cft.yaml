apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: provision-cloudformation-template
  title: Create CloudFormation Stack
  description: Create CloudFormation Stack
  tags: ['recommended']
spec:
  owner: guests
  type: service
  parameters:
    - title: Resource type
      required:
        - ResourceType
      properties:
        ResourceType:
          title: ResourceType
          type: string
          description: Resource type to be created
          'ui:autofocus': true
          'ui:options':
            allowedHosts:
              - s3
              - create-aws-secret
    - title: Choose a Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Location of the repository
          type: string
          'ui:field': RepoUrlPicker
          'ui:options':
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetching Details from Content Folder
      action: fetch:template
      input:
        url: ./${{ parameters.ResourceType }}/
        values:
          name: ${{ parameters.ResourceType }}

    - id: publish
      name: Publishing Details
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This repo is to create an S3 bucket ${{ parameters.BucketName }} using Backstage.
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: public
        branch: main

    - id: github-action
      name: Starting GitHub Action
      action: github:actions:dispatch
      input:
        workflowId: create-stack.yaml
        repoUrl: 'https://github.com/epam-backstage-templates/EPAMBackstage'
        branchOrTagName: 'main'
        workflowInputs:
          resourceType: ${{ parameters.ResourceType }}
          branch: 'main'
          repo_url: ${{ parameters.repoUrl }}
          stack_name: test stack
          template_path: template.json
          parameters: parameters.json

    - id: register
      name: Registering the New Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in Catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
